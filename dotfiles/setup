#!/bin/bash

set -e

echo
echo

package_added=
install_ctf_tools=

if [ -e ~/.ssh/config ]; then
    sshconfig_exists=true
else
    sshconfig_exists=
fi

function verify () {
    while true; do
        echo -n "$1 ([y]es/[n]o) "
        read response
        case "$response" in
            [yY]|[yY][eE][sS]) return 0;;
            [nN]|[nN][oO]) return 1;;
            *) echo "Please enter yes or no";;
        esac
    done
}

function doshow () {
    set -x;
    "$@"
    { ret=$?; } 2>/dev/null
    { set +x; } 2>/dev/null
    return $ret
}

function addpackage {
    local ret
    set +e
    verify "Install $1?"
    ret=$?
    set -e
    if [ $ret -eq 0 ]; then
        package_added=true
        case $distro in
            fedora) pkgs="$pkgs $2" ;;
            ubuntu) pkgs="$pkgs $3" ;;
        esac
    else
        package_added=
    fi
}

if verify "Upgrade and install system packages?"; then
    if [ -e /etc/fedora-release ]; then
        distro=fedora
        pkgs='git htop mlocate nmap tmux vim vim-enhanced zsh gcc gdb libcxx'
    elif [ -e /etc/lsb-release ] && grep -i DISTRIB_ID /etc/lsb-release | grep -i ubuntu >/dev/null; then
        distro=ubuntu
        pkgs='git htop mlocate nmap tmux vim zsh gcc gdb libc++'
    fi

    addpackage Chromium chromium chromium
    case $distro in
        fedora) rpm -qi gnome-shell >/dev/null && addpackage "chrome-gnome-shell gnome-tweak-tool" ;;
        ubuntu) dpkg -l gnome-shell >/dev/null && addpackage "" "chrome-gnome-shell gnome-tweak-tool" ;;
    esac
    addpackage Emacs emacs emacs
    addpackage ripgrep ripgrep "" # Ripgrep is not on ubuntu yet
    addpackage sbcl sbcl sbcl
    addpackage "CTF tools" "binwalk steghide john capstone" "binwalk steghide john capstone"
    install_ctf_tools=$package_added

    addpackage texlive "texlive-scheme-basic texlive-collection-basic texlive-collection-latex texlive-collection-latexextra texlive-collection-latexrecommended"
    addpackage wireshark "wireshark wireshark-qt" wireshark

    if [ -e /etc/fedora-release ]; then
        doshow sudo dnf --refresh upgrade
        doshow sudo dnf install $pkgs
    elif [ -e /etc/lsb-release ] && grep -i DISTRIB_ID /etc/lsb-release | grep -i ubuntu >/dev/null; then
        doshow sudo apt update
        doshow sudo apt upgrade
        doshow sudo apt install $pkgs
    fi

    if verify "Install python build dependencies?"; then
        case $distro in
            fedora) doshow sudo dnf builddep python2 python3 ;;
            ubuntu) doshow sudo apt build-dep python python3 ;;
        esac
    fi
fi

cd "$HOME"

if ! type git >/dev/null 2>&1; then
    echo "Git is not installed"
    exit 1
fi

if ! git config --get user.name >/dev/null; then
    echo "Error: cannot backup current files in $HOME unless git config user.name is set"
    echo -n "enter name for git> "
    read line
    doshow git config --global user.name "$line"
fi

if ! git config --get user.email >/dev/null; then
    echo "Error: cannot backup current files in $HOME unless git config user.email is set"
    echo -n "enter email for git> "
    read line
    doshow git config --global user.email "$line"
fi

if ! [ -e ~/peda ] && { [ -n "${install_ctf_tools}" ] || verify "Install PEDA?"; }; then
    doshow git clone https://github.com/longld/peda.git ~/peda
fi

if ! [ -e ~/.emacs.d ] && verify "Install Spacemacs?"; then
    doshow git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d
fi

if verify "Enable emacs.service?"; then
    doshow systemctl --user enable emacs.service
fi

if [ -e ~/.git ]; then
    echo "Error: $HOME/.git already exists"
    verify "Remove $HOME/.git? " && doshow rm -rf ~/.git || exit 1
fi

doshow git init

[ -d ~/.ssh ] || doshow mkdir -m 700 ~/.ssh
[ -d ~/.ssh/keys ] || doshow mkdir -m 700 ~/.ssh/keys
[ -d ~/.ssh/sessions ] || doshow mkdir -m 700 ~/.ssh/sessions
if ! [ -n "$sshconfig_exists" ]; then
    doshow curl -f https://raw.githubusercontent.com/kevorr/dotfiles/master/dotfiles/sshconfig_header >>~/.ssh/config
    doshow chmod 600 ~/.ssh/config
fi

if verify "Are you Kevin?"; then
    doshow git remote add origin git@github.com:kevorr/dotfiles
    [ -n "$sshconfig_exists" ] || doshow curl -f https://raw.githubusercontent.com/kevorr/dotfiles/master/dotfiles/sshconfig_dev >>~/.ssh/config
    doshow cd ~/.ssh/keys
    if ! [ -e ~/.ssh/keys/github ]; then
        doshow ssh-keygen -t ed25519 -C "$USER@$HOSTNAME" -f github
    fi
    echo "Upload this key to github"
    doshow cat github.pub
    echo -n "Press enter to continue> "
    read line
else
    doshow git remote add origin https://github.com/kevorr/dotfiles
fi

doshow git fetch origin
doshow git branch --track master origin/master
doshow git reset --soft master
doshow git submodule init
doshow git submodule update

if doshow git stash save "local dotfiles backup"; then
    doshow git checkout master
else
    echo "Couldn't git stash, run git reset --hard instead?"
    echo "Warning, this will overwrite files of the same name as files in this repo!"
    verify "Continue?" || exit 1
    doshow git reset --hard master
fi

doshow git config status.showUntrackedFiles no

if ! [ -e ~/.oh-my-zsh ] && verify "Install Oh My Zsh?"; then
    if ! type zsh >/dev/null 2>&1; then
        echo "It appears zsh is not installed. Please install zsh before installing Oh My Zsh"
        echo "overwrite our .zshrc, which you will then have to check out from the local git repository"
        verify "Continue?" || exit 1
    fi
    doshow sh <(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)
fi

doshow cd ~
doshow git checkout .zshrc
