#!/bin/bash

set -ex

USAGE="\
USAGE: $0 [dir]

    dir    Path to doom installation. Defaults to ~/.emacs.d
"

case "$1" in
    -h|--help) printf "%s" "$USAGE"; exit 0
esac

doomlocation="${1:-$HOME/.emacs.d}"
doomlocaldir="${DOOMLOCALDIR:-$doomlocation/.local}"
doom="$doomlocation/bin/doom"
function doom { "$doom" "$@"; }

# Check that the doom binary exists and is executable
if ! [ -f "$doom" -a -x "$doom" ]; then
    printf "No such file or not executable: %s\n\n" "$doom" >&2
    printf "%s" "$USAGE" >&2
    exit 1
fi

# Might need multiple `doom sync`s, for example for proof-general. Repeat until it succeeds
while ! doom sync; do sleep 1; done

# Find the one true .local/straight/build*
build_dirs=($doomlocaldir/straight/build*)
for i in "${!build_dirs[@]}"; do
    if [[ ${build_dirs[$i]} =~ \.el$ ]]; then
        unset -v 'build_dirs[$i]'
    fi
done
build_dirs=("${build_dirs[@]}")

if [[ ${#build_dirs[@]} -ne 1 ]]; then
    echo "Too many (or no?) build* directories: ${build_dirs[*]}" >&2
    exit 1
fi
build_dir=${build_dirs[0]}

# Rebuild vterm
if [ -d "$build_dir/vterm" ]; then
    # https://github.com/akermu/emacs-libvterm#manual-installation
    pushd "$build_dir/vterm" >/dev/null
    mkdir -p build
    cd build
    cmake ..
    make
    popd >/dev/null
fi

# Rebuild pdf-tools
if [ -d "$build_dir/pdf-tools" ]; then
    # https://github.com/politza/pdf-tools/blob/c510442ab89c8a9e9881230eeb364f4663f59e76/lisp/pdf-tools.el#L330-L339
    pushd "$build_dir/pdf-tools" >/dev/null
    build/server/autobuild -D -i "$build_dir/pdf-tools/"
    popd >/dev/null
fi
